{"version":3,"sources":["Components/ListDocs.js","Components/DisplayDocs.js","Components/CreateDocs.js","Components/AddCreateDocs.js","App.js","reportWebVitals.js","index.js"],"names":["ListDocs","props","className","docs","map","doc","title","onClick","showDoc","deleteDoc","DisplayDocs","classNamer","content","clearDisplay","CreateDocs","useState","setTitle","setContent","family","setFamily","size","setSize","color","setColor","dark","setDark","alterFamily","alterSize","style","alterColor","background","alterBackgroundColor","value","onChange","e","target","setFontFamily","setFontSize","type","setFontColor","setBackgroundColor","uploadDoc","clearCreateDocs","AddCreateDocs","addCreateDocs","defaultProps","App","defaultFamily","documents","listDocs","setListDocs","display","setDisplay","displayCreate","setDisplayCreate","fontSize","fontColor","fontFamily","backgroundColor","useEffect","fetch","then","response","json","data","id","method","ok","docIndex","indexOf","splice","tempListDocs","requestOptions","headers","body","JSON","stringify","push","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b481dcc3.chunk.js","sourcesContent":["import {useState} from \"react\"\r\n\r\nexport default function ListDocs(props) {\r\n    const showDoc = (doc) => {\r\n\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"list\">\r\n                    <div>\r\n                        <p className=\"doc-title\">{doc.title}</p>\r\n                    </div>\r\n                    <div>\r\n                        <button className=\"btn btn-showDoc\" onClick={() => props.showDoc(doc)}>View</button>\r\n                    </div>\r\n                    <div>\r\n                        <button className=\"btn btn-deleteDoc\" onClick={() => props.deleteDoc(doc)}>Delete</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div className=\"container-list\">\r\n            {props.docs.map(showDoc)}\r\n        </div>\r\n    )\r\n}","import {useState} from \"react\"\r\n\r\nexport default function DisplayDocs(props) {\r\n    if (props.title !== \"\") {\r\n        return (\r\n            <div classNamer=\"container\">\r\n                <div className=\"display\">\r\n                    <div>\r\n                        <p className=\"doc-title\">{props.title}</p>\r\n                    </div>\r\n                    <div>\r\n                        <p className=\"doc-content\">{props.content}</p>\r\n                    </div>\r\n                    <div>\r\n                        <button className=\"btn btn-clearDocs\" onClick={() => props.clearDisplay()}>Clear</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    } else {\r\n        return null\r\n    }\r\n}","import {useState} from \"react\"\r\n\r\nexport default function CreateDocs(props) {\r\n    let className = \"\"\r\n    const [title, setTitle] = useState(\"\")\r\n    const [content, setContent] = useState(\"\")\r\n    const [family, setFamily] = useState(\"\")\r\n    const [size, setSize] = useState(\"\")\r\n    const [color, setColor] = useState(\"\")\r\n    const [dark, setDark] = useState(false) \r\n\r\n    className += props.alterFamily \r\n    className += \" \"\r\n    className += props.alterSize\r\n\r\n    const uploadDoc = () => {\r\n        props.uploadDoc({title:title,content:content})\r\n        setTitle(\"\")\r\n        setContent(\"\")\r\n    }\r\n\r\n    const update = () => {\r\n        props.setFontFamily(family)\r\n        props.setFontSize(size)\r\n        props.setFontColor(color)\r\n    }\r\n\r\n    const setDarkTheme = () => {\r\n        if (!dark) {\r\n            props.setFontColor(color !== \"\" ? color : \"#FFFF00\")\r\n            props.setBackgroundColor(\"#181818\")\r\n            setDark(true)\r\n        } else {\r\n            props.setFontColor(color !== \"\" ? color : \"black\")\r\n            props.setBackgroundColor(\"white\")\r\n            setDark(false)\r\n        }\r\n    }\r\n\r\n    const updateFamily = (e) => {\r\n        setFamily(e.target.value)\r\n        props.setFontFamily(e.target.value)\r\n    }\r\n\r\n    const updateSize = (e) => {\r\n        setSize(e.target.value)\r\n        props.setFontSize(e.target.value)\r\n    }\r\n\r\n    const updateColor = (e) => {\r\n        setColor(e.target.value)\r\n        props.setFontColor(e.target.value)\r\n    }\r\n\r\n    const style = {\r\n        color: props.alterColor,\r\n        background: props.alterBackgroundColor,\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"styling-bar\">\r\n                <select className=\"btn-create drop-down\" value={family} onChange={updateFamily}>\r\n                    <option value=\"sans-serif\">Sans-Serif</option>\r\n                    <option value=\"serif\">Serif</option>\r\n                    <option value=\"fantasy\">Fantasy</option>\r\n                    <option value=\"cursive\">Cursive</option>\r\n                    <option value=\"minecraft\">Minecraft</option>\r\n                </select>\r\n                <select className=\"btn-create drop-down\" value={size} onChange={updateSize}>\r\n                    <option value=\"s12\">12</option>\r\n                    <option value=\"s14\">14</option>\r\n                    <option value=\"s16\">16</option>\r\n                    <option value=\"s18\">18</option>\r\n                    <option value=\"s24\">24</option>\r\n                </select>\r\n                <input className=\"btn-create btn-color\" type=\"color\" value={color} onChange={updateColor}/>\r\n                <button className=\"btn-create btn-darkTheme\" onClick={() => setDarkTheme()}>Dark Theme</button>\r\n            </div>\r\n            <div>\r\n                <input type=\"text\" onChange={(e) => setTitle(e.target.value)} value={title} style={style} className={className + \" title-field\"}/>\r\n            </div>\r\n            <div>\r\n                <textarea onChange={(e) => setContent(e.target.value)} value={content} style={style} className={className + \" content-field\"}/>\r\n            </div>\r\n            <div>\r\n                <button className=\"btn-control btn-add\" onClick={uploadDoc}>Add</button>\r\n            </div>\r\n            <div>\r\n                <button className=\"btn-control btn-clear\" onClick={() => props.clearCreateDocs()}>Clear</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nCreateDocs.defaultProps = {\r\n    alterColor: \"black\",\r\n    alterSize: 12,\r\n    alterFamily: \"sans-serif\",\r\n    alterBackgroundColor: \"white\",\r\n}","import {useState} from \"react\"\r\n\r\nexport default function AddCreateDocs(props) {\r\n    return (\r\n        <div>\r\n            <button className=\"btn btn-addCreateDocs\" onClick={() => props.addCreateDocs()}>Create Documentation</button>\r\n        </div>\r\n    )\r\n}","import './App.css'\nimport ListDocs from './Components/ListDocs'\nimport DisplayDocs from './Components/DisplayDocs'\nimport CreateDocs from './Components/CreateDocs'\nimport AddCreateDocs from './Components/AddCreateDocs'\nimport {useState,useEffect} from \"react\"\n\nfunction App() {\n  let defaultFamily = \"sans-serif\"\n  let defaultSize = \"12\"\n  const [listDocs, setListDocs] = useState({documents: []})\n  const [title, setTitle] = useState(\"\")  \n  const [content, setContent] = useState(\"\")  \n  const [display, setDisplay] = useState(true)\n  const [displayCreate, setDisplayCreate] = useState(false)\n  const [fontSize, setFontSize] = useState(defaultSize)\n  const [fontColor, setFontColor] = useState(\"\")\n  const [fontFamily, setFontFamily] = useState(defaultFamily)\n  const [backgroundColor, setBackgroundColor] = useState(\"\")\n\n  useEffect(() => {\n    fetch(\"http://localhost:3000/docs\").then((response) => response.json()).then((data) => setListDocs({documents:data}))\n  }, [])\n\n  const uploadDoc = (doc) => {\n    let tempListDocs = listDocs.documents\n    const requestOptions = {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\":\"application/json\",\n      },\n      body: JSON.stringify(doc)\n    }\n    fetch(\"http://localhost:3000/docs\", requestOptions).then((response) => response.json()).then((data) => {\n      tempListDocs.push(data)\n      setListDocs({documents:tempListDocs})\n    })\n  }\n\n  const showDoc = (doc) => {\n    setDisplay(true)\n    setTitle(doc.title)\n    setContent(doc.content)\n  }\n\n  const deleteDoc = (doc) => {\n    let docs = listDocs.documents \n    const requestOptions = {\n      method: \"DELETE\"\n    }\n    fetch(`http://localhost:3000/docs/${doc.id}`, requestOptions).then((response) => {\n      if (response.ok) {\n        const docIndex = docs.indexOf(doc)\n        docs.splice(docIndex,1)\n        setListDocs({documents:docs})\n      }\n    })\n  }\n\n  const clearDisplay = () => {\n    setDisplay(false)\n  }\n\n  const addCreateDocs = () => {\n    setDisplayCreate(true)\n  }\n\n  const clearCreateDocs = () => {\n    setDisplayCreate(false)\n    setFontSize(defaultSize)\n    setFontFamily(defaultFamily)\n    setFontColor(\"\")\n    setBackgroundColor(\"\")\n  }\n\n  return (\n    <div>\n      {displayCreate ? null : <AddCreateDocs addCreateDocs={addCreateDocs} />}\n      {displayCreate ? null : <ListDocs docs={listDocs.documents} showDoc={showDoc} deleteDoc={deleteDoc}/>}\n      {display && !displayCreate ? <DisplayDocs title={title} content={content} clearDisplay={clearDisplay}/> : null}\n      {displayCreate ? <CreateDocs uploadDoc={uploadDoc} clearCreateDocs={clearCreateDocs} setFontSize={setFontSize} setFontFamily={setFontFamily} setFontColor={setFontColor} setBackgroundColor={setBackgroundColor} alterSize={fontSize} alterFamily={fontFamily} alterColor={fontColor} alterBackgroundColor={backgroundColor} /> : null}\n    </div>\n  )\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}